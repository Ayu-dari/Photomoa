<nav class="navbar navbar-expand-lg navbar-light" style="background-color: #EADDDD;">
  <div class="container">
    <a class="navbar-brand fw-bold d-flex align-items-center" href="<%= root_path %>" style="color: #EC69EC;">
      <%= image_tag 'photomoa_cat.png', alt: 'Photomoa', width: 30, height: 30, class: 'd-inline-block align-text-top me-2' %>
      Photomoa
    </a>

    <ul class="navbar-nav ms-auto mb-2 mb-lg-0 d-flex flex-row align-items-center gap-3">
      <li class="nav-item">
        <%= link_to "マイページに戻る", mypage_path, class: "nav-link" %>
      </li>
      <li class="nav-item">
        <%= link_to "プロフィール編集", edit_user_registration_path, class: "nav-link" %>
      </li>
      <% if user_signed_in? %>
        <li class="nav-item">
          <%= button_to "ログアウト", destroy_user_session_path,
                method: :delete,
                data: { turbo_confirm: "本当にログアウトしますか？" },
                class: "btn btn-outline-danger btn-sm" %>
        </li>
      <% end %>
    </ul>
  </div>
</nav>

<div class="container my-5">
  <h2 class="text-center text-white py-3" style="background-color: #B3E0FF;">思い出を検索する</h2>

  <div class="row g-2 align-items-center">
  <div class="col-auto">
    <button class="btn btn-success" id="current_location_btn">現在地</button>
  </div>
  <div class="col">
    <input type="text" id="search_location" class="form-control" placeholder="店名/地名を入力">
  </div>
  <div class="col-auto">
    <button class="btn btn-primary" id="search_location_btn">検索</button>  <!-- 追加 -->
  </div>
  <div class="col-auto">
    <select id="tag_filter" class="form-select">
      <option value="">全てのタグ</option>
      <!-- ここにタグのoptionを動的に挿入 -->
    </select>
  </div>
  <div class="col-auto">
    <button class="btn btn-primary" id="favorite_filter_btn">お気に入り</button>
  </div>
</div>
  </div>
</div>

<div id="map" style="height: 600px; width: 100%; margin-top: 10px;"></div>

<!-- 必要に応じて投稿リストなどの表示 -->

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const map = L.map('map').setView([35.68, 139.76], 13); // 初期表示：東京駅周辺

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      maxZoom: 19,
      attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    // ✅ 現在地ボタン
    document.getElementById('current_location_btn').addEventListener('click', () => {
      if (!navigator.geolocation) {
        alert('このブラウザでは現在地を取得できません。');
        return;
      }

      navigator.geolocation.getCurrentPosition((pos) => {
        const lat = pos.coords.latitude;
        const lng = pos.coords.longitude;
        map.setView([lat, lng], 15);

        L.marker([lat, lng]).addTo(map)
          .bindPopup('現在地')
          .openPopup();
      }, () => {
        alert('現在地を取得できませんでした。');
      });
    });

    // ✅ 検索ボタン → 店名/地名からマーカー表示
    document.getElementById('search_location_btn').addEventListener('click', () => {
      const keyword = document.getElementById('search_location').value;
      if (!keyword) {
        alert("検索ワードを入力してください");
        return;
      }

      // Nominatim APIを使ってジオコーディング
      fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(keyword)}`)
        .then(response => response.json())
        .then(data => {
          if (data.length === 0) {
            alert("場所が見つかりませんでした");
            return;
          }

          const lat = data[0].lat;
          const lon = data[0].lon;
          const name = data[0].display_name;

          map.setView([lat, lon], 15);
          L.marker([lat, lon]).addTo(map)
            .bindPopup(name)
            .openPopup();
        })
        .catch(error => {
          console.error("検索中にエラーが発生しました:", error);
          alert("検索に失敗しました");
        });
    });
  });
</script>

<!-- Leaflet CSS & JS CDN -->
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>